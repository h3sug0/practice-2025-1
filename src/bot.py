import logging
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes, MessageHandler, filters

# === –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ===
BOT_TOKEN = "7696960406:AAEHoRPVJLInEyhlXAXry_L-fDd5o7LE9Vg"

# === –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ ===
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)

# === –ö–æ–º–∞–Ω–¥–∞ /start ===
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "üëã –ü—Ä–∏–≤–µ—Ç!\n"
        "–Ø –±–æ—Ç –∫ –ø—Ä–æ–µ–∫—Ç—É:\n"
        "¬´–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –∞–ø–ø–∞—Ä–∞—Ç–Ω–æ-–ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ–≥–æ –∫–æ–º–ø–ª–µ–∫—Å–∞ –¥–∏—Å—Ç–∞–Ω—Ü–∏–æ–Ω–Ω–æ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–µ—Å–ø–∏–ª–æ—Ç–Ω–æ–π —Ç–µ—Ö–Ω–∏–∫–æ–π¬ª\n\n"
        "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
        "/about ‚Äî –ø—Ä–æ–±–ª–µ–º–∞ –∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞\n"
        "/goal ‚Äî —Ü–µ–ª—å –∏ –∞–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç—å\n"
        "/tasks ‚Äî –∫–ª—é—á–µ–≤—ã–µ –∑–∞–¥–∞—á–∏\n"
        "/result ‚Äî –æ–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç\n"
        "/test ‚Äî –ø—Ä–æ–≤–µ—Ä—å —Å–µ–±—è –≤ –∫–æ–Ω—Ü–µ"
    )

# === –ö–æ–º–∞–Ω–¥–∞ /about ===
async def about(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "üìå –ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞:\n"
        "–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –∞–ø–ø–∞—Ä–∞—Ç–Ω–æ-–ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ–≥–æ –∫–æ–º–ø–ª–µ–∫—Å–∞ –¥–∏—Å—Ç–∞–Ω—Ü–∏–æ–Ω–Ω–æ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–µ—Å–ø–∏–ª–æ—Ç–Ω–æ–π —Ç–µ—Ö–Ω–∏–∫–æ–π –∏ –ø–µ—Ä–µ–¥–∞—á–∏ –¥–∞–Ω–Ω—ã—Ö –ø–æ—Å—Ä–µ–¥—Å—Ç–≤–æ–º —Å–µ—Ç–∏ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç.\n\n"
        "üìå –ü—Ä–æ–±–ª–µ–º–∞—Ç–∏–∫–∞:\n"
        "–í –Ω–∞—Å—Ç–æ—è—â–µ–µ –≤—Ä–µ–º—è –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ –±–µ—Å–ø–∏–ª–æ—Ç–Ω–æ–π —Ç–µ—Ö–Ω–∏–∫–∏, –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–µ–º–æ–π —á–µ–ª–æ–≤–µ–∫–æ–º-–æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–º, —Ç—Ä–µ–±—É–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–≥–æ –ø—É–ª—å—Ç–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç —Å–æ–±–æ–π –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –Ω–æ—Å–∏–º–æ–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ. –¢–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º, –æ–Ω –∑–∞–Ω–∏–º–∞–µ—Ç –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–µ—Å—Ç–∞ –∏ –æ–±–ª–∞–¥–∞–µ—Ç –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–π –º–∞—Å—Å–æ–π, —á—Ç–æ –º–æ–∂–µ—Ç –≤—ã–∑—ã–≤–∞—Ç—å –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞. –í–º–µ—Å—Ç–µ —Å —Ç–µ–º, –≤ –Ω–∞—à–µ –≤—Ä–µ–º—è —Å—Ç–∞–ª–∏ —à–∏—Ä–æ–∫–æ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω—ã –∏ –¥–æ—Å—Ç—É–ø–Ω—ã —Ç–µ–ª–µ—Ñ–æ–Ω—ã —Å –¥–æ—Å—Ç—É–ø–æ–º –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç. –≠—Ç–æ –ø—Ä–∏–≤–µ–ª–æ –∫ —Ç–æ–º—É, —á—Ç–æ —É –∫–∞–∂–¥–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞ –≤—Å–µ–≥–¥–∞ –∏–º–µ–µ—Ç—Å—è —Å–º–∞—Ä—Ç—Ñ–æ–Ω —Å –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–±—Ä–∞—É–∑–µ—Ä–æ–º."
    )

# === –ö–æ–º–∞–Ω–¥–∞ /goal ===
async def goal(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "üéØ –¶–µ–ª—å:\n"
        "–û–±–µ—Å–ø–µ—á–µ–Ω–∏–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–ª–µ—Å–Ω–æ–π –±–∞–∑–æ–π –∏ —Å–±–æ—Ä–∞ –¥–∞–Ω–Ω—ã—Ö —Å –Ω–µ—ë –±–µ–∑ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è, –∏—Å–ø–æ–ª—å–∑—É—è —Å–º–∞—Ä—Ç—Ñ–æ–Ω.\n\n"
        "üìå –ê–∫—Ç—É–∞–ª—å–Ω–æ—Å—Ç—å:\n"
        "–í –Ω–∞—Å—Ç–æ—è—â–µ–µ –≤—Ä–µ–º—è –∞–∫—Ç–∏–≤–Ω–æ —Ä–∞–∑–≤–∏–≤–∞–µ—Ç—Å—è –±–µ—Å–ø–∏–ª–æ—Ç–Ω–∞—è —Ç–µ—Ö–Ω–∏–∫–∞, —Ä–∞–±–æ—Ç–∞—é—â–∞—è –∫–∞–∫ –≤ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–º —Ä–µ–∂–∏–º–µ, —Ç–∞–∫ –∏ –ø–æ–¥ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞. –ù–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç —Å–ø–æ—Å–æ–±–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–º–µ–µ—Ç –º–µ—Å—Ç–æ –ø–µ—Ä–µ–¥–∞—á–∞ –¥–∞–Ω–Ω—ã—Ö –º–µ–∂–¥—É –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º–∏ —Å–∏—Å—Ç–µ–º—ã. –° —É—á–µ—Ç–æ–º —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Ä–∞–∑–≤–∏—Ç–∏—è –∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞ —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –æ—Å–æ–±–µ–Ω–Ω–æ –∞–∫—Ç—É–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ-–∞–ø–ø–∞—Ä–∞—Ç–Ω–æ–≥–æ –∫–æ–º–ø–ª–µ–∫—Å–∞ –¥–ª—è –¥–∏—Å—Ç–∞–Ω—Ü–∏–æ–Ω–Ω–æ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —á–µ—Ä–µ–∑ —Å–µ—Ç—å."
    )

# === –ö–æ–º–∞–Ω–¥–∞ /tasks ===
async def tasks(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "üõ† –ö–ª—é—á–µ–≤—ã–µ –∑–∞–¥–∞—á–∏:\n"
        "1. –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ back-end —á–∞—Å—Ç–∏ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.\n"
        "2. –°–æ–∑–¥–∞–Ω–∏–µ front-end –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.\n"
        "3. –ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥—Ä–∞–π–≤–µ—Ä–∞–º–∏ –º–æ—Ç–æ—Ä-–∫–æ–ª–µ—Å.\n"
        "4. –†–µ–∞–ª–∏–∑–∞—Ü–∏—è –∞–ª–≥–æ—Ä–∏—Ç–º–æ–≤ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö, —Å–æ–±–∏—Ä–∞–µ–º—ã—Ö –±–µ—Å–ø–∏–ª–æ—Ç–Ω–æ–π —Ç–µ—Ö–Ω–∏–∫–æ–π.\n"
        "5. –û–±–µ—Å–ø–µ—á–µ–Ω–∏–µ —Å–≤—è–∑–∏ –º–µ–∂–¥—É –æ—Ç–¥–µ–ª—å–Ω—ã–º–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º–∏ –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ–≥–æ –∫–æ–º–ø–ª–µ–∫—Å–∞."
    )

# === –ö–æ–º–∞–Ω–¥–∞ /result ===
async def result(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "‚úÖ –û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç:\n"
        "–ü—Ä–æ–≥—Ä–∞–º–º–Ω–æ-–∞–ø–ø–∞—Ä–∞—Ç–Ω—ã–π –∫–æ–º–ø–ª–µ–∫—Å –¥–ª—è –¥–∏—Å—Ç–∞–Ω—Ü–∏–æ–Ω–Ω–æ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–µ—Å–ø–∏–ª–æ—Ç–Ω–æ–π —Ç–µ—Ö–Ω–∏–∫–æ–π –∏ –ø–µ—Ä–µ–¥–∞—á–∏ –¥–∞–Ω–Ω—ã—Ö —á–µ—Ä–µ–∑ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç.\n\n"
        "–†–∞–∑—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π –ø—Ä–æ—Ç–æ—Ç–∏–ø –±—É–¥–µ—Ç —è–≤–ª—è—Ç—å—Å—è —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–º —É–ø—Ä–∞–≤–ª—è—é—â–∏–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ–º, –∫–æ—Ç–æ—Ä–æ–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤—Å—Ç—Ä–æ–µ–Ω–æ —Å –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–º–∏ –¥–æ—Ä–∞–±–æ—Ç–∫–∞–º–∏ –≤ —à–∏—Ä–æ–∫–∏–π —Ä—è–¥ —Ä–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º—ã—Ö –∫–æ–ª–µ—Å–Ω—ã—Ö –±–∞–∑, –ø—Ä–∏–≤–æ–¥–∏–º—ã—Ö –≤ –¥–≤–∏–∂–µ–Ω–∏–µ —ç–ª–µ–∫—Ç—Ä–æ–º–æ—Ç–æ—Ä–∞–º–∏."
    )

# === –ö–æ–º–∞–Ω–¥–∞ /test ‚Äì —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–Ω–∞–Ω–∏–π ===
QUESTION_INDEX = 0
CORRECT_ANSWERS = 0

QUESTIONS = [
    {
        "text": "–ö–∞–∫–æ–≤–∞ –æ—Å–Ω–æ–≤–Ω–∞—è —Ü–µ–ª—å –ø—Ä–æ–µ–∫—Ç–∞?\nA) –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–≤–µ—Ç–æ—Ñ–æ—Ä–æ–º\nB) –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–ª–µ—Å–Ω–æ–π –±–∞–∑–æ–π —á–µ—Ä–µ–∑ —Å–º–∞—Ä—Ç—Ñ–æ–Ω\nC) –°–æ–∑–¥–∞—Ç—å –∏–≥—Ä—É",
        "correct": "B"
    },
    {
        "text": "–ö–∞–∫–æ–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º–æ—Ç–æ—Ä–∞–º–∏?\nA) Raspberry Pi\nB) Arduino\nC) –ü—É–ª—å—Ç –î–£",
        "correct": "B"
    },
    {
        "text": "–ß—Ç–æ –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è –º–µ–∂–¥—É —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞–º–∏?\nA) –ú—É–∑—ã–∫–∞\nB) –î–∞–Ω–Ω—ã–µ —Ç–µ–ª–µ–º–µ—Ç—Ä–∏–∏ –∏ –∫–æ–º–∞–Ω–¥—ã\nC) –§–∏–ª—å–º—ã",
        "correct": "B"
    },
    {
        "text": "–ü–æ—á–µ–º—É –≤–∞–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∏–Ω—Ç–µ—Ä–Ω–µ—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è?\nA) –û–Ω —Å–ª–æ–∂–µ–Ω –≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏\nB) –û–Ω –Ω—É–∂–µ–Ω —Ç–æ–ª—å–∫–æ –¥–ª—è –∏–≥—Ä\nC) –û–Ω –≤—Å–µ–≥–¥–∞ –¥–æ—Å—Ç—É–ø–µ–Ω —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
        "correct": "C"
    },
    {
        "text": "–ö–∞–∫–æ–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è?\nA) –ö–æ–Ω—Å–æ–ª—å\nB) –í–µ–±-–±—Ä–∞—É–∑–µ—Ä\nC) –¢–æ–ª—å–∫–æ –º–æ–±–∏–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ",
        "correct": "B"
    }
]

# === –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–æ–≤ –Ω–∞ —Ç–µ—Å—Ç ===
async def test(update: Update, context: ContextTypes.DEFAULT_TYPE):
    global QUESTION_INDEX, CORRECT_ANSWERS
    QUESTION_INDEX = 0
    CORRECT_ANSWERS = 0
    await ask_question(update)

async def ask_question(update: Update):
    if QUESTION_INDEX < len(QUESTIONS):
        await update.message.reply_text(QUESTIONS[QUESTION_INDEX]["text"])
    else:
        await finish_test(update)

async def handle_answer(update: Update, context: ContextTypes.DEFAULT_TYPE):
    global QUESTION_INDEX, CORRECT_ANSWERS
    user_answer = update.message.text.strip().upper()

    correct_answer = QUESTIONS[QUESTION_INDEX]["correct"]
    if user_answer == correct_answer:
        CORRECT_ANSWERS += 1
    QUESTION_INDEX += 1
    await ask_question(update)

async def finish_test(update: Update):
    total = len(QUESTIONS)
    score = CORRECT_ANSWERS
    await update.message.reply_text(
        f"üèÅ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à—ë–Ω!\n–í—ã –æ—Ç–≤–µ—Ç–∏–ª–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –Ω–∞ {score} –∏–∑ {total} –≤–æ–ø—Ä–æ—Å–æ–≤.\n"
        "–°–ø–∞—Å–∏–±–æ –∑–∞ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ —Ç–µ—Å—Ç–∞!"
    )

# === –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞ ===
def main():
    app = ApplicationBuilder().token(BOT_TOKEN).build()

    # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∫–æ–º–∞–Ω–¥
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("about", about))
    app.add_handler(CommandHandler("goal", goal))
    app.add_handler(CommandHandler("tasks", tasks))
    app.add_handler(CommandHandler("result", result))
    app.add_handler(CommandHandler("test", test))

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–æ–≤ –Ω–∞ —Ç–µ—Å—Ç
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_answer))

    print("üü¢ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    app.run_polling()

# === –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ ===
if __name__ == '__main__':
    main()